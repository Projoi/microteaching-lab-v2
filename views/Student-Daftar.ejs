<%- include('./layouts/header'); -%>

<main class="lg:max-w-2xl lg:mx-auto min-h-screen flex items-center justify-center">
  <div class="rounded-md border border-gray-300 bg-white w-full">
    <!-- Register Form -->
    <form id="form-register" class="grid grid-cols-1 md:grid-cols-2 overflow-hidden">
      <div class="bg-[#a382b6] flex items-center justify-center p-6">
        <img src="/img/logo.png" width="200px" alt="Virtual Lab Logo" />
      </div>

      <div class="flex flex-col items-center justify-center p-8">
        <!-- <p class="text-black/80 font-thin mb-4 text-lg">- Tour Virtual Lab -</p> -->
        <h1 class="font-medium text-2xl">Daftar</h1>
        <p class="text-sm text-black/60 text-center">untuk melanjutkan ke <strong>Virtual Lab</strong></p>

        <div class="mt-8 w-full">
          <div class="relative mb-3">
              <input required value="" name="email" type="email" id="email" class="block px-2.5 pb-1 pt-4 w-full text-sm text-gray-900 bg-transparent rounded-lg border-1 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer" placeholder=" " />
              <label for="email" class="absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-4 scale-75 top-2 z-10 origin-[0] bg-white dark:bg-gray-900 px-2 peer-focus:px-2 peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:-translate-y-1/2 peer-placeholder-shown:top-1/2 peer-focus:top-2 peer-focus:scale-75 peer-focus:-translate-y-4 rtl:peer-focus:translate-x-1/4 rtl:peer-focus:left-auto start-1">Email</label>
          </div>
          <div class="relative">
              <input required value="" name="password" type="password" id="password" class="block px-2.5 pb-1 pt-4 w-full text-sm text-gray-900 bg-transparent rounded-lg border-1 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer" placeholder=" " />
              <label for="password" class="absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-4 scale-75 top-2 z-10 origin-[0] bg-white dark:bg-gray-900 px-2 peer-focus:px-2 peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:-translate-y-1/2 peer-placeholder-shown:top-1/2 peer-focus:top-2 peer-focus:scale-75 peer-focus:-translate-y-4 rtl:peer-focus:translate-x-1/4 rtl:peer-focus:left-auto start-1">Password</label>
          </div>

          <button type="submit" class="mt-6 w-full bg-blue-500 hover:bg-blue-600 text-white font-semibold text-sm px-8 py-2.5 rounded-full transition">
            Kirim Verifikasi
          </button>

          <p class="text-xs mt-4 text-center">Sudah punya akun? <a href="/login" class="text-blue-500 hover:underline">Masuk</a></p>
        </div>
      </div>
    </form>

    <!-- Verification Form -->
    <form id="form-verification" class="hidden flex-col justify-center text-center items-center p-8">
      <h1 class="font-bold text-2xl">Verifikasi Kode</h1>
      <p class="text-black/60 mt-1 text-base">
        Silakan cek email untuk mendapatkan <strong>kode verifikasi</strong>
      </p>

      <div class="my-6 mt-10 flex items-stretch justify-center gap-3">
        <input type="text" name="verification_code" maxlength="6" placeholder="******" required class="w-full text-lg max-w-[200px] text-center p-2 border border-gray-300 rounded-md" />
        <button type="submit"
          class="bg-blue-500 hover:bg-blue-600 text-white font-semibold text-sm px-8 rounded-md transition">
          Verifikasi
        </button>
      </div>

      <div class="text-sm text-black/60">
        Tidak menerima code? <button id="resend-verfication" type="button" class="disabled:opacity-50 disabled:cursor-none font-medium text-black/80">Kirim Ulang</button>
      </div>

    </form>
  </div>
</main>

<%- include('./layouts/footer'); -%>

<script>
  const formRegister = document.getElementById("form-register");
  const formVerification = document.getElementById("form-verification");
  const registerError = document.getElementById("register-error");
  const resendBtn = document.getElementById("resend-verfication");
  let resendCooldown = 30;
  let countdownInterval = null;

  function startResendCountdown() {
    resendBtn.disabled = true;
    resendBtn.classList.add("opacity-50", "cursor-not-allowed");

    let seconds = resendCooldown;
    resendBtn.textContent = `Kirim Ulang (${seconds}s)`;

    countdownInterval = setInterval(() => {
      seconds--;
      resendBtn.textContent = `Kirim Ulang (${seconds}s)`;

      if (seconds <= 0) {
        clearInterval(countdownInterval);
        resendBtn.disabled = false;
        resendBtn.classList.remove("opacity-50", "cursor-not-allowed");
        resendBtn.textContent = "Kirim Ulang";
      }
    }, 1000);
  }

  $(resendBtn).click(() => submitCodeVerification())
  

  let savedEmail = "";
  let savedPassword = "";

  formRegister.addEventListener("submit", async (e) => {
    e.preventDefault();
    submitCodeVerification()
  });

  formVerification.addEventListener("submit", async (e) => {
    e.preventDefault();
    verifyError.classList.add("hidden");

    const code = formVerification.verification_code.value.trim();

    if (!code) {
      verifyError.textContent = "Kode verifikasi tidak boleh kosong.";
      verifyError.classList.remove("hidden");
      return;
    }

    try {
      const res = await fetch("/api/students/register", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          email: savedEmail,
          password: savedPassword,
          verification_code: code,
        }),
      });

      const data = await res.json();
      if (!res.ok) throw new Error(data.message || "Gagal registrasi.");

      alert("Akun berhasil dibuat, silakan login.");
      window.location.href = "/login";
    } catch (err) {
      verifyError.textContent = err.message;
      verifyError.classList.remove("hidden");
    }
  });

  async function submitCodeVerification(){
    const email = formRegister.email.value.trim();
    const password = formRegister.password.value.trim();

    if (!email || !password) {
      toastr.error("Email dan password wajib diisi.")
      return;
    }

    try {
      const res = await fetch("/api/ask-verification", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ email, password }),
      });

      const data = await res.json();
      if (!res.ok) throw new Error(data.message || "Gagal mengirim verifikasi.");

      savedEmail = email;
      savedPassword = password;

      formRegister.classList.add("hidden");
      formVerification.classList.remove("hidden");
      toastr.success(data.message)

      startResendCountdown();
    } catch (err) {
      toastr.error(err.message)
    }
  }
</script>
